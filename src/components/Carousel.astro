---
interface Props {
  /** Optional custom CSS classes for the wrapper */
  class?: string;
}

const { class: className } = Astro.props;
---

<div class={`relative w-2xl overflow-hidden ${className ?? ""}`}>
  <div
    id="carousel-track"
    class="flex transition-transform duration-500 ease-in-out"
  >
    <slot />
  </div>

  <!-- Controls -->
  <button
    id="prevBtn"
    class="absolute top-1/2 left-4 -translate-y-1/2 bg-black/50 text-white p-2 rounded-full"
    aria-label="Previous slide"
  >
    ‹
  </button>
  <button
    id="nextBtn"
    class="absolute top-1/2 right-4 -translate-y-1/2 bg-black/50 text-white p-2 rounded-full"
    aria-label="Next slide"
  >
    ›
  </button>
</div>

<script>
  let currentIndex = 0;
  const track = document.getElementById("carousel-track");
  const slides = track?.children ?? [];
  const totalSlides = slides.length;

  function updateSlide() {
    if (track) {
      track.style.transform = `translateX(-${currentIndex * 100}%)`;
    }
  }

  document.getElementById("prevBtn")?.addEventListener("click", () => {
    currentIndex = (currentIndex - 1 + totalSlides) % totalSlides;
    updateSlide();
  });

  document.getElementById("nextBtn")?.addEventListener("click", () => {
    currentIndex = (currentIndex + 1) % totalSlides;
    updateSlide();
  });
</script>
